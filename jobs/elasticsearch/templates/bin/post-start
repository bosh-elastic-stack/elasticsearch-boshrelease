#!/bin/bash
# Inspired by https://github.com/cloudfoundry/exemplar-release/blob/master/jobs/paragon/templates/post-start
# If a command fails, exit immediately
set +e

echo "== AssociateIamInstanceProfile =="
## add ec2 instance role
<% if p('elasticsearch.cloud.aws.access_key') != '' and p('elasticsearch.cloud.aws.secret_key') != '' and p('elasticsearch.cloud.aws.bucket') != '' %>
export AWS_ACCESS_KEY_ID=<%= p('elasticsearch.cloud.aws.access_key') %>
export AWS_SECRET_ACCESS_KEY=<%= p('elasticsearch.cloud.aws.secret_key') %>
export AWS_CLI=/var/vcap/packages/awscli/bin/aws

curl -sS http://169.254.169.254
if [[ $? == 0 ]]; then
  INSTANCE_ID=$(curl -sS http://169.254.169.254/latest/meta-data/instance-id)
  REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed -e 's/.$//')
  iam_check=$(curl -sS http://169.254.169.254/latest/meta-data/iam/info | grep "404 - Not Found")
  if [[ $iam_check != "" ]]; then
      $AWS_CLI ec2 associate-iam-instance-profile --instance-id=${INSTANCE_ID} --region ${REGION} --iam-instance-profile Name="<%= p('elasticsearch.cloud.aws.role_name') %>"
  fi
fi
<% end %>

set -e

<% if !p("elasticsearch.health.disable_post_start") %>

export timeout=<%= p("elasticsearch.health.timeout") %>
export polling_frequency=<%= p("elasticsearch.health.interval") %>

export max_attempts=$((timeout / polling_frequency))
export attempts=0
out=$(mktemp health-XXXXXX)

while [[ "$max_attempts" -ge "$attempts" ]]; do
    set +e
    echo "attempt $attempts"
    <% if p("elasticsearch.node.allow_data") and not p("elasticsearch.node.allow_master") %>
    curl -s -f --max-time $timeout -sw '\n%{http_code}' http://127.0.0.1:9200/_cluster/health > ${out}
    <% else %>
    curl -s -f --max-time $timeout -sw '\n%{http_code}' http://127.0.0.1:9200/_cluster/health?local=true > ${out}
    <% end %>
    body=$(cat ${out} | head -n -1)
    status=$(cat ${out} | tail -n 1)
    echo "body: ${body}"
    echo "status: ${status}"
    curl -X PUT -s -H 'Content-Type: application/json' http://127.0.0.1:9200/_cluster/settings \
	-d '{"persistent": {"cluster.routing.allocation.enable": "<%= p("elasticsearch.cluster.routing.allocation.enable_post_start") %>"}}'
    <% if p("elasticsearch.node.allow_data") and not p("elasticsearch.node.allow_master") %>
    if [ "${status}" = "200" ] && echo ${body} | grep '"status":"green"'; then
        rm ${out}
        exit 0
    fi
    <% else %>
    if [[ "${status}" = "200" ]]; then
        rm ${out}
        exit 0
    fi
    <% end %>
    set -e

    attempts=$(($attempts + 1))

    sleep "$polling_frequency"
done

rm ${out}
exit 1

<% else %>

echo "Skipping post-start..."

<% end %>
