# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
#cluster.name: my-application
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
#node.name: node-1
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
#path.data: /path/to/data
#
# Path to log files:
#
#path.logs: /path/to/logs
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: 192.168.0.1
#
# Set a custom port for HTTP:
#
#http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
#discovery.zen.ping.unicast.hosts: ["host1", "host2"]
#
# Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes: 
#
# For more information, consult the zen discovery module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true

bootstrap.memory_lock: true
network.host: 0.0.0.0
path.logs: /var/vcap/sys/log/elasticsearch
path.data: /var/vcap/store/elasticsearch
node.name: <%= name %>/<%= index %>
node.attr.zone: <%= spec.az %>
node.master: <%= p("elasticsearch.node.allow_master") %>
node.data: <%= p("elasticsearch.node.allow_data") %>
node.ingest: <%= p("elasticsearch.node.allow_ingest") %>

<%
  cluster_name = nil
  if_link("elasticsearch") { |elasticsearch_link| cluster_name = elasticsearch_link.p("elasticsearch.cluster_name") }
  unless cluster_name
    cluster_name = p("elasticsearch.cluster_name")
  end
%>
cluster.name: <%= cluster_name %>

<%
  minimum_master_nodes = p("elasticsearch.discovery.minimum_master_nodes")
  if minimum_master_nodes == "auto"
    masters = nil
    respond_to?(:if_link) && if_link('elasticsearch') do |elasticsearch|
      masters = link('elasticsearch').instances.length
    end.else do
      masters = p("elasticsearch.master_hosts").length
    end
    if masters % 2 == 0
      raise "Expected an odd number of masters; got #{masters}"
    end
    minimum_master_nodes = masters / 2 + 1
  end
%>
discovery.zen.minimum_master_nodes: <%= minimum_master_nodes %>
<%
  master_hosts = nil
  if_link("elasticsearch") { |elasticsearch_link| master_hosts = elasticsearch_link.instances.map {|e| e.address}.join(',') }
  unless master_hosts
    master_hosts = p("elasticsearch.master_hosts").join(',')
  end
%>
discovery.zen.ping.unicast.hosts: <%= master_hosts %>
<% if_p('elasticsearch.config_options') do |config_options| %>
<%= config_options.to_yaml.gsub(/---/, '') %>
<% end %>
